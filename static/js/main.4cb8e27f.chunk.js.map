{"version":3,"sources":["components/A4Page.tsx","components/Background.tsx","components/ColumnOne.tsx","components/ColumnTwo.tsx","components/Description.tsx","components/RecoilState.ts","components/ExperienceItem.tsx","components/ExperienceList.tsx","components/Footer.tsx","components/Grid.tsx","components/OptionsContainer.tsx","components/LeftHeader.tsx","components/PersonalInfo.tsx","img/profile_pic.jpg","components/ProfilePic.tsx","components/ProgressBar.tsx","components/Skills.tsx","img/black-linen.png","App.tsx","index.tsx"],"names":["A4Page","pageNumber","children","marginTop","className","Background","backImage","id","style","backgroundImage","ColumnOne","ColumnTwo","Description","name","position","title","description","languages","selectLanguange","atom","key","default","currentLanguage","selector","get","ExperienceItem","startDate","endDate","subTitle","bulletPoints","technologies","lang","useRecoilValue","parseDate","date","undefined","d","Date","isNaN","getDate","toLocaleString","month","year","leftDate","rightDate","createDate","map","b","i","length","tech","padding","ExperienceList","data","start","end","slice","Footer","Grid","OptionsContainer","useState","optionState","setOptionState","handleState","onClick","LeftHeader","PersonalInfo","nameStyles","valueStyles","info","type","value","icon","faEnvelope","fixedWidth","href","faLinkedin","faPhone","faGithub","faCaretRight","parseValues","ProfilePic","form","size","src","profilePic","alt","ProgressBar","percentage","barState","setBarState","useEffect","setTimeout","finalBar","width","transitionProperty","transitionDuration","transitionTimingFunction","Skills","aux","sort","a","localeCompare","v","App","useRecoilState","setLang","personalInfoData","profile","educationData","experienceData","academicProjectsData","skillsData","options","window","alert","onChange","event","target","abr","translation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ksVA+BeA,EAtBF,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,UAalC,OACI,sBAAKC,UAAS,qIAAgID,EAAY,UAAY,IAAtK,UACKD,EACD,qBAAKE,UAAU,8FAAf,SAA8GH,QCV3GI,EARE,SAAC,GAA8C,IAA5CH,EAA2C,EAA3CA,SAAUI,EAAiC,EAAjCA,UAC1B,OACI,qBAAKC,GAAG,SAASH,UAAU,oEAAoEI,MAAO,CAAEC,gBAAgB,OAAD,OAASH,EAAT,MAAvH,SACKJ,KCIEQ,EARC,SAAC,GAAkC,IAAhCR,EAA+B,EAA/BA,SACf,OACI,qBAAKE,UAAU,gIAAf,SACKF,KCKES,EARC,SAAC,GAAkC,IAAhCT,EAA+B,EAA/BA,SACf,OACI,qBAAKE,UAAU,gGAAf,SACKF,KCkBEU,EAlBG,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,KAAMC,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,YACxC,OACI,qCACI,qBAAKZ,UAAU,4EAAf,SAA4FS,IAC5F,qBAAKT,UAAU,2FAAf,SAA2GU,IAC3G,qBAAKV,UAAU,sDAAf,SACI,sBAAMA,UAAU,iCAAhB,SACKW,MAIT,qBAAKX,UAAU,0CAAf,SACKY,QCjBXC,EAAY,C,aAELC,EAAkBC,YAAK,CAChCC,IAAK,kBACLC,QAAS,UAGAC,EAAkBC,YAAS,CACpCH,IAAK,kBACLI,IAAK,YAGD,QAFQA,EADM,EAAVA,KACQN,IAGR,QACA,IAAK,QACD,OAAOD,EAAU,GACrB,IAAK,QACD,OAAOA,EAAU,OCkElBQ,EA1EM,SAAC,GAA8F,IAA5FV,EAA2F,EAA3FA,MAAOW,EAAoF,EAApFA,UAAWC,EAAyE,EAAzEA,QAASC,EAAgE,EAAhEA,SAAUC,EAAsD,EAAtDA,aAAcC,EAAwC,EAAxCA,aAEjEC,EAAOC,YAAed,GAExBe,EAAY,SAACC,GACb,GAAa,OAATA,QAA0BC,IAATD,EACjB,OAAO,KAGX,GAAoB,kBAATA,EACP,OAAOA,EAGX,IAAME,EAAI,IAAIC,KAAKH,GAEnB,OAAII,MAAMF,EAAEG,WACDL,EAGJE,EAAEI,eAAeT,EAAM,CAAEU,MAAO,OAAQC,KAAM,aAmBzD,OACI,sBAAKtC,UAAU,OAAf,UAEI,qBAAKA,UAAU,kDAAf,SACKW,IAEL,sBAAKX,UAAU,sCAAf,UACI,qBAAKA,UAAU,2BAAf,SACKwB,IAvBA,SAACF,EAAwCC,GACtD,IAAIgB,EAAWV,EAAUP,GACrBkB,EAAYX,EAAUN,GAE1B,OAAIgB,GAAYC,EAER,sBAAKxC,UAAU,iDAAf,UACKuC,EADL,MACkBC,KAIf,KAcFC,CAAWnB,EAAWC,MAE3B,sBAAKvB,UAAU,uDAAf,UACI,oBAAIA,UAAU,YAAd,SAEQyB,EAAaiB,KAAI,SAACC,EAAGC,GAAJ,OACb,6BAAaD,GAAJC,QAKpBlB,GAAyC,KAAb,OAAZA,QAAY,IAAZA,OAAA,EAAAA,EAAcmB,QAC3B,qBAAK7C,UAAU,qCAAf,SAEQ0B,EAAagB,KAAI,SAACI,EAAMF,GAAP,OACb,sBAAc5C,UAAU,uEAAuEI,MAAO,CAAE2C,QAAS,OAAjH,SAA2HD,GAAhHF,QAIvB,YClDLI,EAnBM,SAAC,GAAsD,IAApDrC,EAAmD,EAAnDA,MAAOsC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,IACxC,OACI,gCAEI,qBAAKnD,UAAU,sDAAf,SACI,sBAAMA,UAAU,iCAAhB,SACKW,MAKLsC,EAAKG,MAAMF,EAAOC,GAAKT,KAAI,SAACV,EAAGY,GAAJ,OACvB,cAAC,EAAD,eAA4BZ,GAAPY,UCT1BS,EARF,SAAC,GAA+B,IAA7BvD,EAA4B,EAA5BA,SACZ,OACI,qBAAKE,UAAU,qDAAf,SACKF,KCKEwD,EARJ,SAAC,GAA6B,IAA3BxD,EAA0B,EAA1BA,SACV,OACI,qBAAKE,UAAU,6EAAf,SACKF,KCuBEyD,G,MAzBQ,SAAC,GAAyC,IAAvCzD,EAAsC,EAAtCA,SAEtB,EAAsC0D,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEIC,EAAc,WACdD,GAAgBD,IAGpB,OACI,sBAAKzD,UAAS,kHAA6GyD,EAAc,aAAe,eAA1I,KAAd,UAEI,sBAAKzD,UAAS,UAAKyD,EAAc,oBAAsB,oBAAzC,iDAAd,UACI,wBAAQzD,UAAU,qLAAqL4D,QAASD,EAAhN,eACC7D,KAGL,wBAAQE,UAAS,UAAMyD,EAA4C,4BAA9B,4BAApB,0NAAuSG,QAASD,EAAjU,sB,gCCTGE,EARE,SAAC,GAAgC,IAA9BlD,EAA6B,EAA7BA,MAChB,OACI,qBAAKX,UAAU,wEAAf,SACKW,KC8FEmD,EArFI,SAAC,GAAwC,IAAtCnD,EAAqC,EAArCA,MAAOsC,EAA8B,EAA9BA,KACrBc,EAAU,uEACVC,EAAW,2FAuEf,OACI,gCACI,cAAC,EAAD,CAAYrD,MAAOA,IACnB,oBAAIX,UAAU,iBAAd,SAEQiD,EAAKP,KAAI,SAACuB,EAAMrB,GAAP,OA1EP,SAACqB,EAAgBrB,GAC/B,IAAQnC,EAAsBwD,EAAtBxD,KAAMyD,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAGpB,OAAQD,GACJ,IAAK,QACD,OACI,qBAAYlE,UAAU,0DAAtB,UACI,sBAAKA,UAAW+D,EAAhB,UACI,cAAC,IAAD,CAAiB3D,MAAO,CAAE,YAAc,GAAd,OAP1B,EAO0B,OAAqCgE,KAAMC,IAAYC,YAAU,IAC1F7D,KAEL,qBAAKT,UAAWgE,EAAhB,SACI,mBAAGO,KAAI,iBAAYJ,GAAnB,SAA6BA,QAN5BvB,GAUjB,IAAK,WACD,OACI,qBAAY5C,UAAU,0DAAtB,UACI,sBAAKA,UAAW+D,EAAhB,UACI,cAAC,IAAD,CAAiB3D,MAAO,CAAE,YAAc,GAAd,OAnB1B,EAmB0B,OAAqCgE,KAAMI,IAAYF,YAAU,IAC1F7D,KAEL,qBAAKT,UAAWgE,EAAhB,SACI,mBAAGO,KAAI,iBAAYJ,GAAnB,SAA6BA,QAN5BvB,GAUjB,IAAK,QACD,OACI,qBAAY5C,UAAU,0DAAtB,UACI,sBAAKA,UAAW+D,EAAhB,UACI,cAAC,IAAD,CAAiB3D,MAAO,CAAE,YAAc,GAAd,OA/B1B,EA+B0B,OAAqCgE,KAAMK,IAASH,YAAU,IACvF7D,KAEL,qBAAKT,UAAWgE,EAAhB,SACI,mBAAGO,KAAI,eAAUJ,GAAjB,SAA2BA,QAN1BvB,GAUjB,IAAK,MACD,OACI,qBAAY5C,UAAU,0DAAtB,UACI,sBAAKA,UAAW+D,EAAhB,UACI,cAAC,IAAD,CAAiB3D,MAAO,CAAE,YAAc,GAAd,OA3C1B,EA2C0B,OAAqCgE,KAAMM,IAAUJ,YAAU,IACxF7D,KAEL,qBAAKT,UAAWgE,EAAhB,SACI,mBAAGO,KAAI,iBAAYJ,GAAnB,SAA6BA,QAN5BvB,GAUjB,QACI,OACI,qBAAY5C,UAAU,0DAAtB,UACI,sBAAKA,UAAW+D,EAAhB,UACI,cAAC,IAAD,CAAiB3D,MAAO,CAAE,YAAc,GAAd,OAvD1B,EAuD0B,OAAqCgE,KAAMO,IAAcL,YAAU,IAC5F7D,KAEL,qBAAKT,UAAWgE,EAAhB,SACKG,MANAvB,IAmBagC,CAAYX,EAAMrB,YChG7C,MAA0B,wCCgB1BiC,EARE,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,KAGtB,OACI,qBAAK/E,UAAS,UAAK8E,EAAL,cAAeC,EAAf,wCAA2DC,IAAKC,EAAYC,IAAI,qB,OCgCvFC,EArCG,SAAC,GAA4C,IAA1C1E,EAAyC,EAAzCA,KAAM2E,EAAmC,EAAnCA,WAEvB,EAAgC5B,oBAAS,GAAzC,mBAAO6B,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACNC,YAAW,WACPF,GAAY,KACb,OACJ,IAEH,IAIIG,EAAW,CACXC,MAAM,GAAD,OAAKN,EAAL,KACLO,mBAAoB,QACpBC,mBAAoB,OACpBC,yBAA0B,eAG9B,OACI,sBAAK7F,UAAU,0DAAf,UACI,qBAAKA,UAAU,iDAAf,SAAiES,IACjE,qBAAKT,UAAU,sDAAf,SACI,qBACIA,UAAU,6DACVI,MACIiF,EACII,EAnBP,CACbC,MAAO,cCMAI,EAdF,SAAC,GAAkC,IAAhCnF,EAA+B,EAA/BA,MAAOsC,EAAwB,EAAxBA,KACb8C,EAAG,YAAO9C,GAEhB,OACI,gCACI,cAAC,EAAD,CAAYtC,MAAOA,IAClBoF,EACIC,MAAK,SAACC,EAAGtD,GAAJ,OAAUsD,EAAExF,KAAKyF,cAAcvD,EAAElC,SACtCiC,KAAI,SAACyD,EAAGvD,GAAJ,OAAU,wBAAC,EAAD,2BAAiBuD,GAAjB,IAAoBnF,IAAK4B,YClBzC,MAA0B,wCCwG1BwD,EAnFL,SAAC,GAAmB,eAE5B,MAAwBC,YAAevF,GAAvC,mBAAOa,EAAP,KAAa2E,EAAb,KAUA,EAA2H1E,YAAeV,GAAlIqF,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,QAASC,EAAnC,EAAmCA,cAAeC,EAAlD,EAAkDA,eAAgBC,EAAlE,EAAkEA,qBAAsBC,EAAxF,EAAwFA,WAAY/F,EAApG,EAAoGA,UAAWgG,EAA/G,EAA+GA,QAE/G,OACE,eAAC,EAAD,CAAY3G,UAAWA,EAAvB,UAKE,cAAC,EAAD,CAAQL,WAAY,EAAGE,WAAW,EAAlC,SACE,eAAC,EAAD,WACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAY+E,KAAK,eAAeC,KAAK,OACrC,cAAC,EAAD,eAAkBwB,IAClB,cAAC,EAAD,eAAYK,OAEd,eAAC,EAAD,WACE,cAAC,EAAD,eAAiBJ,IACjB,cAAC,EAAD,eAAoBE,IACpB,cAAC,EAAD,eAAoBD,YAM1B,cAAC,EAAD,CAAQ5G,WAAY,EAApB,SACE,eAAC,EAAD,WACE,cAAC,EAAD,IAEA,cAAC,EAAD,UACE,cAAC,EAAD,2BAAoB8G,GAApB,IAA0CzD,MAAO,EAAGC,IAAK,YAM/D,cAAC,EAAD,CAAQtD,WAAY,EAApB,SACE,eAAC,EAAD,WACE,cAAC,EAAD,IAEA,cAAC,EAAD,UACE,cAAC,EAAD,2BAAoB8G,GAApB,IAA0CzD,MAAO,YAKvD,cAAC,EAAD,UACE,cAAC,EAAD,eAAkBqD,MAGpB,eAAC,EAAD,WACE,wBAAQvG,UAAU,4JAA4J4D,QAtDlK,WAChBkD,OAAOC,MAAMF,EAAQ,GAAG1C,QAqDpB,SACE,sBAAMnE,UAAU,cAAhB,SACG6G,EAAQ,GAAG1C,UAIhB,wBAAQnE,UAAU,2IAChBmE,MAAOxC,EAAMqF,SAjEI,SAACC,GACxBX,EAAQW,EAAMC,OAAO/C,QA+DjB,SAGItD,EAAU6B,KAAI,SAAAyD,GAAC,OACb,wBAAoBhC,MAAOgC,EAAEgB,IAA7B,SAAmChB,EAAEiB,aAAxBjB,EAAEgB,iB,YCrF7BE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,W","file":"static/js/main.4cb8e27f.chunk.js","sourcesContent":["import React from \"react\";\r\n// import ImageAsset from \"./ImageAsset\";\r\n\r\ninterface A4PageProps {\r\n    pageNumber?: number;\r\n    children?: React.ReactNode;\r\n    marginTop?: boolean;\r\n}\r\n\r\nlet A4Page = ({ pageNumber, children, marginTop }: A4PageProps) => {\r\n\r\n    // let randomImages = (n: number) => {\r\n    //     let v = [];\r\n    //     for (let i = 0; i < n; i++) {\r\n    //         let x = 850 + Math.random() * 500;\r\n    //         let y = 0 + Math.random() * 500;\r\n    //         v.push(<ImageAsset x={x} y={y} />)\r\n    //     }\r\n\r\n    //     return v;\r\n    // }\r\n\r\n    return (\r\n        <div className={`w-full relative mt-0 p-4 a4:p-3 print:p-3 bg-gray-50 print:w-a4 a4:w-a4 a4:h-a4 print:h-a4 print:m-0 a4:mb-4 a4:shadow-2xl ${marginTop ? 'a4:mt-4' : ''}`}>\r\n            {children}\r\n            <div className=\"hidden a4:block print:block absolute right-3 bottom-3 text-base text-gray-800 font-semibold\">{pageNumber}</div>\r\n            {/* {randomImages(2)} */}\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default A4Page;","import React from \"react\";\r\n\r\ninterface BackgroundProps {\r\n    children?: React.ReactNode;\r\n    backImage: string;\r\n}\r\n\r\nlet Background = ({ children, backImage }: BackgroundProps) => {\r\n    return (\r\n        <div id=\"appPar\" className=\"flex flex-col items-center bg-yellow-100 bg-repeat print:contents\" style={{ backgroundImage: `url(${backImage})` }}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Background;","import React from \"react\";\r\n\r\ninterface ColumnOneProps {\r\n    children?: React.ReactNode;\r\n}\r\n\r\nlet ColumnOne = ({ children }: ColumnOneProps) => {\r\n    return (\r\n        <div className=\"hidden bg-gray-300 p-3 pt-8 a4:flex a4:flex-col a4:gap-3 a4:col-span-4 print:flex print:flex-col print:gap-3 print:col-span-4\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColumnOne;","import React from \"react\";\r\n\r\ninterface ColumnTwoProps {\r\n    children?: React.ReactNode;\r\n}\r\n\r\nlet ColumnTwo = ({ children }: ColumnTwoProps) => {\r\n    return (\r\n        <div className=\"col-span-1 flex flex-col a4:pl-3 a4:pr-3 a4:col-span-8 print:pl-3 print:pr-3 print:col-span-8\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColumnTwo;","import React from \"react\";\r\n\r\ninterface DescriptionProps {\r\n    name: string;\r\n    position: string;\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nlet Description = ({ name, position, title, description }: DescriptionProps) => {\r\n    return (\r\n        <>\r\n            <div className=\"mt-16 text-left font-mono uppercase text-5xl font-extrabold text-gray-700\">{name}</div>\r\n            <div className=\"mt-4 text-right font-mono uppercase text-3xl font-bold text-gray-500 bg-antiquegreen p-1\">{position}</div>\r\n            <div className=\"text-gray-900 text-2xl font-semibold mt-8 uppercase\">\r\n                <span className=\"border-antiquegreen border-b-4\">\r\n                    {title}\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"mt-6 text-gray-700 text-sm text-justify\">\r\n                {description}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Description;","import { atom, selector } from \"recoil\";\r\nimport en_EN from '../data/en_EN.json';\r\nimport pt_PT from '../data/pt_PT.json';\r\n\r\nconst languages = [en_EN, pt_PT];\r\n\r\nexport const selectLanguange = atom({\r\n    key: \"selectLanguange\",\r\n    default: 'pt-PT'\r\n});\r\n\r\nexport const currentLanguage = selector({\r\n    key: \"currentLanguage\",\r\n    get: ({ get }) => {\r\n        let c = get(selectLanguange);\r\n\r\n        switch (c) {\r\n            default:\r\n            case 'en-EN':\r\n                return languages[0];\r\n            case 'pt-PT':\r\n                return languages[1];\r\n        }\r\n    }\r\n});\r\n","import React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { selectLanguange } from \"./RecoilState\";\r\n\r\nexport interface ExperienceItemProps {\r\n    title: string,\r\n    startDate?: string | number,\r\n    endDate?: string | number,\r\n    subTitle: string,\r\n    bulletPoints: string[]\r\n    technologies?: string[]\r\n}\r\n\r\nlet ExperienceItem = ({ title, startDate, endDate, subTitle, bulletPoints, technologies }: ExperienceItemProps) => {\r\n\r\n    const lang = useRecoilValue(selectLanguange);\r\n\r\n    let parseDate = (date: string | number | undefined) => {\r\n        if (date === null || date === undefined) {\r\n            return null;\r\n        }\r\n\r\n        if (typeof date === 'number') {\r\n            return date;\r\n        }\r\n\r\n        const d = new Date(date);\r\n\r\n        if (isNaN(d.getDate())) {\r\n            return date;\r\n        }\r\n\r\n        return d.toLocaleString(lang, { month: 'long', year: 'numeric' });\r\n\r\n    }\r\n\r\n    let createDate = (startDate: string | number | undefined, endDate: string | number | undefined) => {\r\n        let leftDate = parseDate(startDate);\r\n        let rightDate = parseDate(endDate);\r\n\r\n        if (leftDate && rightDate) {\r\n            return (\r\n                <div className=\"text-gray-800 font-semibold text-sm text-right\">\r\n                    {leftDate} - {rightDate}\r\n                </div>\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-6\">\r\n\r\n            <div className=\"text-gray-800 text-base font-semibold text-left\">\r\n                {title}\r\n            </div>\r\n            <div className=\"flex flex-row justify-between gap-3\">\r\n                <div className=\"text-sm text-left italic\">\r\n                    {subTitle}\r\n                </div>\r\n                {createDate(startDate, endDate)}\r\n            </div>\r\n            <div className=\"mt-2 text-gray-700 text-justify text-sm ml-3 a4:ml-6\">\r\n                <ul className=\"list-disc\">\r\n                    {\r\n                        bulletPoints.map((b, i) => (\r\n                            <li key={i}>{b}</li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n\r\n                {technologies && technologies?.length !== 0 ?\r\n                    <div className=\"flex flex-row gap-2 flex-wrap mt-4\">\r\n                        {\r\n                            technologies.map((tech, i) =>\r\n                                <span key={i} className=\"bg-antiquegreen rounded-lg text-center self-center font-mono text-xs\" style={{ padding: '2px' }}>{tech}</span>\r\n                            )\r\n                        }\r\n                    </div> :\r\n                    null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExperienceItem;","import React from \"react\";\r\nimport type { ExperienceItemProps } from \"./ExperienceItem\";\r\nimport ExperienceItem from \"./ExperienceItem\";\r\n\r\nexport interface ExperienceListProps {\r\n    title?: string;\r\n    data: ExperienceItemProps[];\r\n    start?: number,\r\n    end?: number\r\n}\r\n\r\nlet ExperienceList = ({ title, data, start, end }: ExperienceListProps) => {\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"text-gray-900 text-2xl font-semibold mt-8 uppercase\">\r\n                <span className=\"border-antiquegreen border-b-4\">\r\n                    {title}\r\n                </span>\r\n            </div>\r\n\r\n            {\r\n                data.slice(start, end).map((d, i) => (\r\n                    <ExperienceItem key={i} {...d} />\r\n                ))\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ExperienceList;","import React from \"react\";\r\n\r\ninterface FooterProps {\r\n    children?: React.ReactNode;\r\n}\r\n\r\nlet Footer = ({ children }: FooterProps) => {\r\n    return (\r\n        <div className=\"grid p-5 print:hidden a4:hidden bg-gray-300 w-full\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\ninterface GridProps {\r\n    children?: React.ReactNode;\r\n}\r\n\r\nlet Grid = ({ children }: GridProps) => {\r\n    return (\r\n        <div className=\"grid grid-cols-1 print:grid-cols-12 a4:grid-cols-12 grid-rows-1 min-h-full\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Grid;","import React, { useState } from \"react\";\r\nimport './OptionsContainer.css';\r\n\r\ninterface OptionsContainerProps {\r\n    children?: React.ReactNode;\r\n}\r\n\r\nlet OptionsContainer = ({ children }: OptionsContainerProps) => {\r\n\r\n    const [optionState, setOptionState] = useState(false);\r\n\r\n    let handleState = () => {\r\n        setOptionState(!optionState);\r\n    }\r\n\r\n    return (\r\n        <div className={`print:hidden fixed origin-bottom-right bottom-5 right-5 a4:bottom-10 a4:right-10 bg-white shadow-lg p-4 ${optionState ? 'open-state' : ' close-state'} `}>\r\n\r\n            <div className={`${optionState ? 'open-state-child ' : 'close-state-child'} flex flex-col gap-4 justify-center items-end`}>\r\n                <button className=\"origin-top-right top-0 right-0 bg-antiquegreen text-gray-500 hover:bg-gray-400 hover:text-gray-50 p-2 w-8 h-8 flex justify-center items-center rounded-lg shadow-lg cursor-pointer\" onClick={handleState}>X</button>\r\n                {children}\r\n            </div>\r\n\r\n            <button className={`${!optionState ? 'inverse-open-state-child ' : 'inverse-close-state-child'} absolute origin-center top-0 left-0 flex flex-col justify-center items-center rounded-full w-12 h-12 bg-antiquegreen text-gray-500 hover:bg-gray-400 hover:text-gray-50 border-2 border-antiquegreen-darker shadow-lg`} onClick={handleState}>\r\n                ...\r\n            </button>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OptionsContainer;","import React from \"react\";\r\n\r\ninterface LeftHeaderProps {\r\n    title: string;\r\n}\r\n\r\nlet LeftHeader = ({ title }: LeftHeaderProps) => {\r\n    return (\r\n        <div className=\"text-gray-800 font-sans font-bold text-2xl border-b-2 border-gray-800\">\r\n            {title}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeftHeader;","import { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faEnvelope } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faCaretRight, faPhone } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport LeftHeader from \"./LeftHeader\";\r\n\r\nexport interface InfoData {\r\n    name: string;\r\n    value: string;\r\n    type?: string | \"git\" | \"email\" | \"linkedin\" | \"phone\";\r\n}\r\n\r\ninterface PersonalInfoProps {\r\n    title: string;\r\n    data: Array<InfoData>\r\n}\r\n\r\nlet PersonalInfo = ({ title, data }: PersonalInfoProps) => {\r\n    let nameStyles = `text-gray-800 font-sans font-bold text-base group-hover:text-red-500`;\r\n    let valueStyles = `mb-4 font-semibold text-sm text-gray-600 group-hover:text-gray-900 font-sans break-words`;\r\n\r\n    let parseValues = (info: InfoData, i: number) => {\r\n        const { name, type, value } = info;\r\n        const rightMargin = 8;\r\n\r\n        switch (type) {\r\n            case \"email\":\r\n                return (\r\n                    <li key={i} className=\"transition transform duration-100 group hover:scale-105\">\r\n                        <div className={nameStyles}>\r\n                            <FontAwesomeIcon style={{ 'marginRight': `${rightMargin}px` }} icon={faEnvelope} fixedWidth />\r\n                            {name}\r\n                        </div>\r\n                        <div className={valueStyles}>\r\n                            <a href={`mailto:${value}`}>{value}</a>\r\n                        </div>\r\n                    </li>\r\n                );\r\n            case \"linkedin\":\r\n                return (\r\n                    <li key={i} className=\"transition transform duration-100 group hover:scale-105\">\r\n                        <div className={nameStyles}>\r\n                            <FontAwesomeIcon style={{ 'marginRight': `${rightMargin}px` }} icon={faLinkedin} fixedWidth />\r\n                            {name}\r\n                        </div>\r\n                        <div className={valueStyles}>\r\n                            <a href={`http://${value}`}>{value}</a>\r\n                        </div>\r\n                    </li>\r\n                );\r\n            case \"phone\":\r\n                return (\r\n                    <li key={i} className=\"transition transform duration-100 group hover:scale-105\">\r\n                        <div className={nameStyles}>\r\n                            <FontAwesomeIcon style={{ 'marginRight': `${rightMargin}px` }} icon={faPhone} fixedWidth />\r\n                            {name}\r\n                        </div>\r\n                        <div className={valueStyles}>\r\n                            <a href={`tel:+${value}`}>{value}</a>\r\n                        </div>\r\n                    </li>\r\n                );\r\n            case \"git\":\r\n                return (\r\n                    <li key={i} className=\"transition transform duration-100 group hover:scale-105\">\r\n                        <div className={nameStyles}>\r\n                            <FontAwesomeIcon style={{ 'marginRight': `${rightMargin}px` }} icon={faGithub} fixedWidth />\r\n                            {name}\r\n                        </div>\r\n                        <div className={valueStyles}>\r\n                            <a href={`http://${value}`}>{value}</a>\r\n                        </div>\r\n                    </li>\r\n                );\r\n            default:\r\n                return (\r\n                    <li key={i} className=\"transition transform duration-100 group hover:scale-105\">\r\n                        <div className={nameStyles}>\r\n                            <FontAwesomeIcon style={{ 'marginRight': `${rightMargin}px` }} icon={faCaretRight} fixedWidth />\r\n                            {name}\r\n                        </div>\r\n                        <div className={valueStyles}>\r\n                            {value}\r\n                        </div>\r\n                    </li>\r\n                );\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <LeftHeader title={title} />\r\n            <ul className=\"mt-1 text-left\">\r\n                {\r\n                    data.map((info, i) => parseValues(info, i))\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonalInfo;","export default __webpack_public_path__ + \"static/media/profile_pic.12be7f0a.jpg\";","import React from \"react\";\r\nimport profilePic from \"../img/profile_pic.jpg\";\r\n\r\ninterface ProfilePicProps {\r\n    form: 'rounded-full',\r\n    size: '28' | '36' | '40' | 'full'\r\n}\r\n\r\nlet ProfilePic = ({ form, size }: ProfilePicProps) => {\r\n\r\n\r\n    return (\r\n        <img className={`${form} w-${size} self-center border-4 border-gray-50`} src={profilePic} alt=\"Profile Picture\" />\r\n    );\r\n}\r\n\r\nexport default ProfilePic;","import React, { useEffect, useState } from \"react\";\r\n\r\nexport interface ProgressBarProps {\r\n    name: string;\r\n    percentage: number;\r\n}\r\n\r\nlet ProgressBar = ({ name, percentage }: ProgressBarProps) => {\r\n\r\n    const [barState, setBarState] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setBarState(true);\r\n        }, 1000);\r\n    }, [])\r\n\r\n    let initialBar = {\r\n        width: '0%',\r\n    }\r\n\r\n    let finalBar = {\r\n        width: `${percentage}%`,\r\n        transitionProperty: 'width',\r\n        transitionDuration: '0.2s',\r\n        transitionTimingFunction: 'ease-in-out',\r\n    }\r\n\r\n    return (\r\n        <div className=\"transition transform duration-100 group hover:scale-105\">\r\n            <div className=\"text-gray-600 font-sans font-bold text-sm mt-1\">{name}</div>\r\n            <div className=\"bg-gray-100 rounded-lg overflow-hidden h-2 relative\">\r\n                <div\r\n                    className=\"absolute h-2 bg-antiquegreen-darker group-hover:bg-red-400\"\r\n                    style={\r\n                        barState ?\r\n                            finalBar :\r\n                            initialBar\r\n                    } />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProgressBar;","import React from 'react';\r\nimport ProgressBar from './ProgressBar';\r\nimport type { ProgressBarProps } from './ProgressBar';\r\nimport LeftHeader from './LeftHeader';\r\n\r\ninterface SkillsProps {\r\n    title: string;\r\n    data: ProgressBarProps[];\r\n}\r\n\r\nlet Skills = ({ title, data }: SkillsProps) => {\r\n    const aux = [...data];\r\n\r\n    return (\r\n        <div>\r\n            <LeftHeader title={title} />\r\n            {aux\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((v, i) => <ProgressBar {...v} key={i} />)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Skills;","export default __webpack_public_path__ + \"static/media/black-linen.8a1abc77.png\";","import React from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport A4Page from './components/A4Page';\nimport Background from './components/Background';\nimport ColumnOne from './components/ColumnOne';\nimport ColumnTwo from './components/ColumnTwo';\nimport Description from './components/Description';\nimport ExperienceList from './components/ExperienceList';\nimport Footer from './components/Footer';\nimport Grid from './components/Grid';\nimport Options from './components/Options';\nimport OptionsContainer from './components/OptionsContainer';\nimport PersonalInfo from './components/PersonalInfo';\nimport ProfilePic from './components/ProfilePic';\nimport { currentLanguage, selectLanguange } from './components/RecoilState';\nimport Skills from './components/Skills';\nimport backImage from './img/black-linen.png';\n\n\ninterface AppProps { }\n\nlet App = ({ }: AppProps) => {\n\n  const [lang, setLang] = useRecoilState(selectLanguange);\n\n  const onLanguageChange = (event: any) => {\n    setLang(event.target.value);\n  }\n\n  const showAbout = () => {\n    window.alert(options[0].value);\n  }\n\n  const { personalInfoData, profile, educationData, experienceData, academicProjectsData, skillsData, languages, options } = useRecoilValue(currentLanguage);\n\n  return (\n    <Background backImage={backImage}>\n      {/* <Options languages={languages} options={options} /> */}\n\n\n\n      <A4Page pageNumber={1} marginTop={true}>\n        <Grid>\n          <ColumnOne>\n            <ProfilePic form='rounded-full' size='40' />\n            <PersonalInfo {...personalInfoData} />\n            <Skills {...skillsData} />\n          </ColumnOne>\n          <ColumnTwo>\n            <Description {...profile} />\n            <ExperienceList {...experienceData} />\n            <ExperienceList {...educationData} />\n          </ColumnTwo>\n        </Grid>\n      </A4Page>\n\n\n      <A4Page pageNumber={2}>\n        <Grid>\n          <ColumnOne>\n          </ColumnOne>\n          <ColumnTwo>\n            <ExperienceList {...academicProjectsData} start={0} end={5} />\n          </ColumnTwo>\n        </Grid>\n      </A4Page>\n\n\n      <A4Page pageNumber={3}>\n        <Grid>\n          <ColumnOne>\n          </ColumnOne>\n          <ColumnTwo>\n            <ExperienceList {...academicProjectsData} start={5} />\n          </ColumnTwo>\n        </Grid>\n      </A4Page>\n\n      <Footer>\n        <PersonalInfo {...personalInfoData} />\n      </Footer>\n\n      <OptionsContainer>\n        <button className=\"w-full bg-gray-300 shadow-2xl hover:bg-gray-500 hover:text-gray-50 p-2 rounded-lg text-gray-900 text-base flex flex-col justify-items-center items-center\" onClick={showAbout}>\n          <span className=\"self-center\">\n            {options[0].value}\n          </span>\n        </button>\n\n        <select className=\"block w-full py-2 px-3 border rounded-lg shadow-2xl text-base border-none bg-gray-300 hover:bg-gray-500 hover:text-gray-50 text-gray-900\"\n          value={lang} onChange={onLanguageChange}>\n          {\n            languages.map(v => (\n              <option key={v.abr} value={v.abr}>{v.translation}</option>\n            ))\n          }\n        </select>\n      </OptionsContainer>\n\n\n    </Background>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { RecoilRoot } from 'recoil';\nimport App from './App';\nimport './index.css';\nimport 'tailwindcss/tailwind.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <Router>\n        <App />\n      </Router>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}